{"version":3,"file":"static/webpack/static\\development\\pages\\signup.js.92a974c9f5badbb7bdb8.hot-update.js","sources":["webpack:///./pages/signup.js"],"sourcesContent":["import React, { useState, useCallback } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { Button, Form, Input } from 'antd';\r\nimport { useDispatch } from 'react-redux';\r\nimport { SIGN_UP_REQUEST } from '../reducers/user';\r\nimport Router from 'next/router';\r\n\r\nconst Signup = () => {\r\n    const [id, setId] = useState('');\r\n    const [nickname, setNickname] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [passwordCheck, setPasswordCheck] = useState('');\r\n\r\n    const [passwordError, setPasswordError] = useState('');\r\n    const { isSigningUp } = useSelector(state => state.user);\r\n    const dispatch = useDispatch();\r\n\r\n    const onFinshSignUpForm = useCallback((e) => {\r\n\r\n        if (password !== passwordCheck) {\r\n            return setPasswordError(true);\r\n        }\r\n\r\n        dispatch({\r\n            type: SIGN_UP_REQUEST,\r\n            data: {\r\n                id,\r\n                password,\r\n                nickname\r\n            }\r\n        })\r\n\r\n        if (isSignedUp) {\r\n            return Router.push('/')\r\n        }\r\n        \r\n\r\n        \r\n    }, [password, passwordCheck])\r\n\r\n    const onChangeId = (e) => {\r\n        setId(e.target.value)\r\n    }\r\n\r\n    const onChangeNickname = (e) => {\r\n        setNickname(e.target.value);\r\n    }\r\n\r\n    const onChangepassword = (e) => {\r\n        setPasswordError(e.target.value !== password);\r\n        setPassword(e.target.value)\r\n    }\r\n\r\n    const onChangepasswordCheck = (e) => {\r\n        setPasswordError(e.target.value !== password);\r\n        setPasswordCheck(e.target.value);\r\n    }\r\n\r\n    return (\r\n        <Form onFinish={onFinshSignUpForm}>\r\n            <Form.Item\r\n                label=\"아이디\"\r\n                name=\"id\"\r\n            >\r\n                <Input value={id} onChange={onChangeId} placeholder=\"아이디를 입력하세요\" required />\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n                label=\"닉네임\"\r\n                name=\"nickname\"\r\n            >\r\n                <Input value={nickname} onChange={onChangeNickname} placeholder=\"닉네임을 입력하세요\" required />\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n                label=\"비밀번호\"\r\n                name=\"password\"\r\n            >\r\n                <Input type=\"password\" value={password} onChange={onChangepassword} placeholder=\"비밀번호를 입력하세요\" required />\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n                label=\"비밀번호 확인\"\r\n                name=\"passwordcheck\"\r\n            >\r\n                <Input type=\"password\" value={passwordCheck} onChange={onChangepasswordCheck} placeholder=\"비밀번호를 재입력하세요\" required />\r\n            </Form.Item>\r\n            {passwordError && <div style={{ color: 'red' }}>비밀번호가 일치하지 않습니다.</div>}\r\n            <Form.Item>\r\n                <Button type=\"primary\" htmlType=\"submit\" loading={isSigningUp}>\r\n                    가입하기\r\n            </Button>\r\n            </Form.Item>\r\n        </Form>\r\n    )\r\n}\r\n\r\nexport default Signup;"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAOA;AAAA;AAPA;AACA;AAOA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAFA;AACA;AAQA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AACA;;;;A","sourceRoot":""}