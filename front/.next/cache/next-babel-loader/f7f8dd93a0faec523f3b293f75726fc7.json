{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nexport const initialState = {\n  allPost: [{\n    id: 1,\n    kategorie: null,\n    User: {\n      id: 1,\n      nickname: '보노보노'\n    },\n    content: '',\n    img: '',\n    comments: []\n  }],\n  imagePaths: [],\n  addPostErrorReason: '',\n  isAddingPost: false,\n  postAdded: false,\n  isAddingComment: false,\n  addCommentErrorReason: '',\n  commentAdded: false\n};\nexport const ADD_POST_REQUEST = 'ADD_POST_REQUEST';\nexport const ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\nexport const ADD_POST_FAILURE = 'ADD_POST_FAILURE';\nexport default ((state = initialState, action) => {\n  switch (action.type) {\n    case ADD_POST_REQUEST:\n      {\n        return _objectSpread({}, state);\n      }\n\n    case ADD_POST_REQUEST:\n      {\n        return _objectSpread({}, state);\n      }\n\n    case ADD_POST_REQUEST:\n      {\n        return _objectSpread({}, state);\n      }\n\n    default:\n      {\n        return _objectSpread({}, state);\n      }\n  }\n});","map":{"version":3,"sources":["C:/BLOG/front/reducers/post.js"],"names":["initialState","allPost","id","kategorie","User","nickname","content","img","comments","imagePaths","addPostErrorReason","isAddingPost","postAdded","isAddingComment","addCommentErrorReason","commentAdded","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","state","action","type"],"mappings":";;;;;;AAAA,OAAO,MAAMA,YAAY,GAAG;AACxBC,EAAAA,OAAO,EAAE,CAAC;AACNC,IAAAA,EAAE,EAAE,CADE;AAENC,IAAAA,SAAS,EAAE,IAFL;AAGNC,IAAAA,IAAI,EAAE;AACFF,MAAAA,EAAE,EAAE,CADF;AAEFG,MAAAA,QAAQ,EAAE;AAFR,KAHA;AAONC,IAAAA,OAAO,EAAE,EAPH;AAQNC,IAAAA,GAAG,EAAE,EARC;AASNC,IAAAA,QAAQ,EAAE;AATJ,GAAD,CADe;AAYxBC,EAAAA,UAAU,EAAE,EAZY;AAaxBC,EAAAA,kBAAkB,EAAE,EAbI;AAcxBC,EAAAA,YAAY,EAAE,KAdU;AAexBC,EAAAA,SAAS,EAAE,KAfa;AAgBxBC,EAAAA,eAAe,EAAE,KAhBO;AAiBxBC,EAAAA,qBAAqB,EAAE,EAjBC;AAkBxBC,EAAAA,YAAY,EAAE;AAlBU,CAArB;AAqBP,OAAO,MAAMC,gBAAgB,GAAG,kBAAzB;AACP,OAAO,MAAMC,gBAAgB,GAAG,kBAAzB;AACP,OAAO,MAAMC,gBAAgB,GAAG,kBAAzB;AAEP,gBAAe,CAACC,KAAK,GAAGnB,YAAT,EAAuBoB,MAAvB,KAAkC;AAC7C,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKL,gBAAL;AAAwB;AACpB,iCACOG,KADP;AAGH;;AAED,SAAKH,gBAAL;AAAwB;AACpB,iCACOG,KADP;AAGH;;AAED,SAAKH,gBAAL;AAAwB;AACpB,iCACOG,KADP;AAGH;;AAED;AAAU;AACN,iCACOA,KADP;AAGH;AAvBL;AAyBH,CA1BD","sourcesContent":["export const initialState = {\r\n    allPost: [{\r\n        id: 1,\r\n        kategorie: null,\r\n        User: {\r\n            id: 1,\r\n            nickname: '보노보노'\r\n        },\r\n        content: '',\r\n        img: '',\r\n        comments: [],\r\n    }],\r\n    imagePaths: [],\r\n    addPostErrorReason: '',\r\n    isAddingPost: false,\r\n    postAdded: false,\r\n    isAddingComment: false,\r\n    addCommentErrorReason: '',\r\n    commentAdded: false,\r\n}\r\n\r\nexport const ADD_POST_REQUEST = 'ADD_POST_REQUEST'\r\nexport const ADD_POST_SUCCESS = 'ADD_POST_SUCCESS'\r\nexport const ADD_POST_FAILURE = 'ADD_POST_FAILURE'\r\n\r\nexport default (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case ADD_POST_REQUEST : {\r\n            return {\r\n                ...state,\r\n            }\r\n        }\r\n\r\n        case ADD_POST_REQUEST : {\r\n            return {\r\n                ...state,\r\n            }\r\n        }\r\n\r\n        case ADD_POST_REQUEST : {\r\n            return {\r\n                ...state,\r\n            }\r\n        }\r\n\r\n        default : {\r\n            return {\r\n                ...state,\r\n            }\r\n        }\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}