{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nconst dummyPost = {\n  id: 2,\n  User: {\n    id: 1,\n    nickname: '제로초'\n  },\n  content: '나는 더미입니다.',\n  comments: []\n};\nconst dummyComment = {\n  id: 1,\n  User: {\n    id: 1,\n    nickname: '포로리'\n  },\n  createdAt: new Date(),\n  content: '더미 댓글입니다.'\n};\nexport const initialState = {\n  allPosts: [{\n    id: 1,\n    kategorie: null,\n    User: {\n      id: 1,\n      nickname: '보노보노'\n    },\n    content: '',\n    img: '',\n    comments: []\n  }],\n  imagePaths: [],\n  addPostErrorReason: '',\n  isAddingPost: false,\n  postAdded: false,\n  isAddingComment: false,\n  addCommentErrorReason: '',\n  commentAdded: false\n};\nexport const ADD_POST_REQUEST = 'ADD_POST_REQUEST';\nexport const ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\nexport const ADD_POST_FAILURE = 'ADD_POST_FAILURE';\nexport const ADD_COMMENT_REQUEST = 'ADD_COMMENT_REQUEST';\nexport const ADD_COMMENT_SUCCESS = 'ADD_COMMENT_SUCCESS';\nexport const ADD_COMMENT_FAILURE = 'ADD_COMMENT_FAILURE';\nexport default ((state = initialState, action) => {\n  switch (action.type) {\n    case ADD_POST_REQUEST:\n      {\n        return _objectSpread({}, state, {\n          isAddingPost: true,\n          addPostErrorReason: ''\n        });\n      }\n\n    case ADD_POST_SUCCESS:\n      {\n        return _objectSpread({}, state, {\n          isAddingPost: false,\n          postAdded: true,\n          allPosts: [dummyPost, ...allPosts]\n        });\n      }\n\n    case ADD_POST_FAILURE:\n      {\n        return _objectSpread({}, state, {\n          isAddingPost: false,\n          addPostErrorReason: action.data\n        });\n      }\n\n    case ADD_COMMENT_REQUEST:\n      {\n        return _objectSpread({}, state, {\n          isAddingComment: true,\n          addCommentErrorReason: ''\n        });\n      }\n\n    case ADD_COMMENT_SUCCESS:\n      {\n        return _objectSpread({}, state, {\n          isAddingComment: false,\n          postAdded: true\n        });\n      }\n\n    case ADD_COMMENT_FAILURE:\n      {\n        return _objectSpread({}, state, {\n          isAddingComment: false,\n          addCommentErrorReason: action.data\n        });\n      }\n\n    default:\n      {\n        return _objectSpread({}, state);\n      }\n  }\n});","map":{"version":3,"sources":["C:/BLOG/front/reducers/post.js"],"names":["dummyPost","id","User","nickname","content","comments","dummyComment","createdAt","Date","initialState","allPosts","kategorie","img","imagePaths","addPostErrorReason","isAddingPost","postAdded","isAddingComment","addCommentErrorReason","commentAdded","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","state","action","type","data"],"mappings":";;;;;;AAAA,MAAMA,SAAS,GAAG;AACdC,EAAAA,EAAE,EAAE,CADU;AAEdC,EAAAA,IAAI,EAAE;AACFD,IAAAA,EAAE,EAAE,CADF;AAEFE,IAAAA,QAAQ,EAAE;AAFR,GAFQ;AAMdC,EAAAA,OAAO,EAAE,WANK;AAOdC,EAAAA,QAAQ,EAAE;AAPI,CAAlB;AAUA,MAAMC,YAAY,GAAG;AACjBL,EAAAA,EAAE,EAAE,CADa;AAEjBC,EAAAA,IAAI,EAAE;AACFD,IAAAA,EAAE,EAAE,CADF;AAEFE,IAAAA,QAAQ,EAAE;AAFR,GAFW;AAMjBI,EAAAA,SAAS,EAAE,IAAIC,IAAJ,EANM;AAOjBJ,EAAAA,OAAO,EAAE;AAPQ,CAArB;AAWA,OAAO,MAAMK,YAAY,GAAG;AACxBC,EAAAA,QAAQ,EAAE,CAAC;AACPT,IAAAA,EAAE,EAAE,CADG;AAEPU,IAAAA,SAAS,EAAE,IAFJ;AAGPT,IAAAA,IAAI,EAAE;AACFD,MAAAA,EAAE,EAAE,CADF;AAEFE,MAAAA,QAAQ,EAAE;AAFR,KAHC;AAOPC,IAAAA,OAAO,EAAE,EAPF;AAQPQ,IAAAA,GAAG,EAAE,EARE;AASPP,IAAAA,QAAQ,EAAE;AATH,GAAD,CADc;AAYxBQ,EAAAA,UAAU,EAAE,EAZY;AAaxBC,EAAAA,kBAAkB,EAAE,EAbI;AAcxBC,EAAAA,YAAY,EAAE,KAdU;AAexBC,EAAAA,SAAS,EAAE,KAfa;AAgBxBC,EAAAA,eAAe,EAAE,KAhBO;AAiBxBC,EAAAA,qBAAqB,EAAE,EAjBC;AAkBxBC,EAAAA,YAAY,EAAE;AAlBU,CAArB;AAqBP,OAAO,MAAMC,gBAAgB,GAAG,kBAAzB;AACP,OAAO,MAAMC,gBAAgB,GAAG,kBAAzB;AACP,OAAO,MAAMC,gBAAgB,GAAG,kBAAzB;AAEP,OAAO,MAAMC,mBAAmB,GAAG,qBAA5B;AACP,OAAO,MAAMC,mBAAmB,GAAG,qBAA5B;AACP,OAAO,MAAMC,mBAAmB,GAAG,qBAA5B;AAGP,gBAAe,CAACC,KAAK,GAAGjB,YAAT,EAAuBkB,MAAvB,KAAkC;AAC7C,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKR,gBAAL;AAAuB;AACnB,iCACOM,KADP;AAEIX,UAAAA,YAAY,EAAE,IAFlB;AAGID,UAAAA,kBAAkB,EAAE;AAHxB;AAKH;;AAED,SAAKO,gBAAL;AAAuB;AACnB,iCACOK,KADP;AAEIX,UAAAA,YAAY,EAAE,KAFlB;AAGIC,UAAAA,SAAS,EAAE,IAHf;AAIIN,UAAAA,QAAQ,EAAE,CAACV,SAAD,EAAY,GAAGU,QAAf;AAJd;AAMH;;AAED,SAAKY,gBAAL;AAAuB;AACnB,iCACOI,KADP;AAEIX,UAAAA,YAAY,EAAE,KAFlB;AAGID,UAAAA,kBAAkB,EAAEa,MAAM,CAACE;AAH/B;AAKH;;AAED,SAAKN,mBAAL;AAA0B;AACtB,iCACOG,KADP;AAEIT,UAAAA,eAAe,EAAE,IAFrB;AAGIC,UAAAA,qBAAqB,EAAE;AAH3B;AAKH;;AAED,SAAKM,mBAAL;AAA0B;AACtB,iCACOE,KADP;AAEIT,UAAAA,eAAe,EAAE,KAFrB;AAGID,UAAAA,SAAS,EAAE;AAHf;AAKH;;AAED,SAAKS,mBAAL;AAA0B;AACtB,iCACOC,KADP;AAEIT,UAAAA,eAAe,EAAE,KAFrB;AAGIC,UAAAA,qBAAqB,EAAES,MAAM,CAACE;AAHlC;AAKH;;AAED;AAAS;AACL,iCACOH,KADP;AAGH;AAtDL;AAwDH,CAzDD","sourcesContent":["const dummyPost = {\r\n    id: 2,\r\n    User: {\r\n        id: 1,\r\n        nickname: '제로초',\r\n    },\r\n    content: '나는 더미입니다.',\r\n    comments: [],\r\n};\r\n\r\nconst dummyComment = {\r\n    id: 1,\r\n    User: {\r\n        id: 1,\r\n        nickname: '포로리',\r\n    },\r\n    createdAt: new Date(),\r\n    content: '더미 댓글입니다.',\r\n};\r\n\r\n\r\nexport const initialState = {\r\n    allPosts: [{\r\n        id: 1,\r\n        kategorie: null,\r\n        User: {\r\n            id: 1,\r\n            nickname: '보노보노'\r\n        },\r\n        content: '',\r\n        img: '',\r\n        comments: [],\r\n    }],\r\n    imagePaths: [],\r\n    addPostErrorReason: '',\r\n    isAddingPost: false,\r\n    postAdded: false,\r\n    isAddingComment: false,\r\n    addCommentErrorReason: '',\r\n    commentAdded: false,\r\n}\r\n\r\nexport const ADD_POST_REQUEST = 'ADD_POST_REQUEST'\r\nexport const ADD_POST_SUCCESS = 'ADD_POST_SUCCESS'\r\nexport const ADD_POST_FAILURE = 'ADD_POST_FAILURE'\r\n\r\nexport const ADD_COMMENT_REQUEST = 'ADD_COMMENT_REQUEST';\r\nexport const ADD_COMMENT_SUCCESS = 'ADD_COMMENT_SUCCESS';\r\nexport const ADD_COMMENT_FAILURE = 'ADD_COMMENT_FAILURE';\r\n\r\n\r\nexport default (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST_REQUEST: {\r\n            return {\r\n                ...state,\r\n                isAddingPost: true,\r\n                addPostErrorReason: '',\r\n            }\r\n        }\r\n\r\n        case ADD_POST_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                isAddingPost: false,\r\n                postAdded: true,\r\n                allPosts: [dummyPost, ...allPosts],\r\n            }\r\n        }\r\n\r\n        case ADD_POST_FAILURE: {\r\n            return {\r\n                ...state,\r\n                isAddingPost: false,\r\n                addPostErrorReason: action.data,\r\n            }\r\n        }\r\n\r\n        case ADD_COMMENT_REQUEST: {\r\n            return {\r\n                ...state,\r\n                isAddingComment: true,\r\n                addCommentErrorReason: '',\r\n            }\r\n        }\r\n\r\n        case ADD_COMMENT_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                isAddingComment: false,\r\n                postAdded: true,\r\n            }\r\n        }\r\n\r\n        case ADD_COMMENT_FAILURE: {\r\n            return {\r\n                ...state,\r\n                isAddingComment: false,\r\n                addCommentErrorReason: action.data,\r\n            }\r\n        }\r\n\r\n        default: {\r\n            return {\r\n                ...state,\r\n            }\r\n        }\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}