{"ast":null,"code":"import { all, delay, fork, put, takeLatest } from 'redux-saga/effects';\nimport { SIGN_UP_REQUEST, SIGN_UP_FAILURE, SIGN_UP_SUCCESS } from '../reducers/user';\n\nfunction loginAPI() {}\n\nfunction* login() {}\n\nfunction* watchLogin() {}\n\nfunction signUpAPI() {}\n\nfunction* signUp() {\n  try {\n    yield delay(2000);\n    yield put({\n      type: SIGN_UP_SUCCESS\n    });\n  } catch (e) {\n    console.error(e);\n    yield put({\n      type: SIGN_UP_FAILURE,\n      error: e\n    });\n  }\n}\n\nfunction* watchSignUp() {\n  yield takeLatest(SIGN_UP_REQUEST, signUp);\n}\n\nexport default function* userSage() {\n  yield all([fork(watchLogin), fork(watchSignUp)]);\n}","map":{"version":3,"sources":["C:/BLOG/front/sagas/post.js"],"names":["all","delay","fork","put","takeLatest","SIGN_UP_REQUEST","SIGN_UP_FAILURE","SIGN_UP_SUCCESS","loginAPI","login","watchLogin","signUpAPI","signUp","type","e","console","error","watchSignUp","userSage"],"mappings":"AAAA,SAAQA,GAAR,EAAaC,KAAb,EAAoBC,IAApB,EAA0BC,GAA1B,EAA+BC,UAA/B,QAAgD,oBAAhD;AACA,SAASC,eAAT,EAA0BC,eAA1B,EAA2CC,eAA3C,QAAkE,kBAAlE;;AAGA,SAASC,QAAT,GAAoB,CAEnB;;AAED,UAAUC,KAAV,GAAkB,CAEjB;;AAED,UAAUC,UAAV,GAAuB,CAEtB;;AAED,SAASC,SAAT,GAAqB,CAEpB;;AAED,UAAUC,MAAV,GAAmB;AACf,MAAI;AACA,UAAMX,KAAK,CAAC,IAAD,CAAX;AACA,UAAME,GAAG,CAAC;AACNU,MAAAA,IAAI,EAAEN;AADA,KAAD,CAAT;AAGH,GALD,CAKE,OAAMO,CAAN,EAAS;AACPC,IAAAA,OAAO,CAACC,KAAR,CAAcF,CAAd;AACA,UAAMX,GAAG,CAAC;AACNU,MAAAA,IAAI,EAAEP,eADA;AAENU,MAAAA,KAAK,EAAEF;AAFD,KAAD,CAAT;AAIH;AACJ;;AAED,UAAUG,WAAV,GAAwB;AACpB,QAAMb,UAAU,CAACC,eAAD,EAAkBO,MAAlB,CAAhB;AACH;;AAID,eAAe,UAAUM,QAAV,GAAqB;AAChC,QAAMlB,GAAG,CAAC,CACNE,IAAI,CAACQ,UAAD,CADE,EAENR,IAAI,CAACe,WAAD,CAFE,CAAD,CAAT;AAIH","sourcesContent":["import {all, delay, fork, put, takeLatest} from 'redux-saga/effects';\r\nimport { SIGN_UP_REQUEST, SIGN_UP_FAILURE, SIGN_UP_SUCCESS } from '../reducers/user';\r\n\r\n\r\nfunction loginAPI() {\r\n\r\n}\r\n\r\nfunction* login() {\r\n\r\n}\r\n\r\nfunction* watchLogin() {\r\n\r\n}\r\n\r\nfunction signUpAPI() {\r\n\r\n}\r\n\r\nfunction* signUp() {\r\n    try {\r\n        yield delay(2000);\r\n        yield put({\r\n            type: SIGN_UP_SUCCESS,\r\n        })\r\n    } catch(e) {\r\n        console.error(e);\r\n        yield put({\r\n            type: SIGN_UP_FAILURE,\r\n            error: e,\r\n        })\r\n    }\r\n}\r\n\r\nfunction* watchSignUp() {\r\n    yield takeLatest(SIGN_UP_REQUEST, signUp)\r\n}\r\n\r\n\r\n\r\nexport default function* userSage() {\r\n    yield all([\r\n        fork(watchLogin),\r\n        fork(watchSignUp)\r\n    ])\r\n}"]},"metadata":{},"sourceType":"module"}